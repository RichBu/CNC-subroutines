%Weidenmiller JOG pro,MX---,
; 
; Weidenmiller Custom Programs
;
; for the Jog Mode
;
;
N10 ;
(PAGE 100)    ; MAIN MENU
(SK1 ="MOVE", SK2="FIND CTR", SK3="FIND EDGE", SK4="INSPEC", SK5="COORD", SK6="SPINDLES", SK7="EXIT")
(KEY=0)
(WKEY)
(IF KEY NE $FC00 GOTO N20) ; F1  MOVE
  (GOTO N1000)
N20 ;
(IF KEY NE $FC01 GOTO N30) ; F2  FIND CENTER
  (GOTO N200)
N30 ;
(IF KEY NE $FC02 GOTO N40) ; F3  FIND EDGE
  (GOTO N3000)
N40 ;
(IF KEY NE $FC03 GOTO N50) ; F4  INSPECTION
  (GOTO N300)
N50 ;
(IF KEY NE $FC04 GOTO N60) ; F5  COORDINATES
  (P277=1)
  (GOTO N400)
N60 ;
(IF KEY NE $FC05 GOTO N70) ; F6  SPINDLES WARM UP
  (GOTO N7000)
N70 ;
(IF KEY NE $FC06 GOTO N80) ; F7  EXIT
  (SYSTEM)
N80 ;
(GOTO N10)
;
; MENU #1A - move main menu
; 
N1000 ;
(KEY = 0)
(PAGE 110)
(SK1="CAV / ROW", SK2="X", SK3="Y", SK4="Z", SK5="A", SK6="", SK7="BACK")
(WKEY)
(IF KEY NE $FC00 GOTO N1120) ; F1  CAV / ROW
  (KEY = 0)
  (GOTO N100)
N1120 ;
(IF KEY NE $FC01 GOTO N1130) ; F2  X AXIS
  (KEY = 0)
  (P277=1)
  (GOTO N1200)
N1130 ;
(IF KEY NE $FC02 GOTO N1140) ; F3  Y AXIS
  (KEY = 0)
  (P277=2)
  (GOTO N1200)
N1140 ;
(IF KEY NE $FC03 GOTO N1150) ; F4  Z AXIS
  (KEY = 0)
  (P277=3)
  (GOTO N1200)
N1150 ;
(IF KEY NE $FC04 GOTO N1160) ; F5  A AXIS
  (KEY = 0)
  (GOTO N1500)
N1160 ;
(IF KEY NE $FC05 GOTO N1170) ; F6  
N1170 ;
(IF KEY NE $FC06 GOTO N1180) ; F7 = BACK
  (KEY = 0)
  (GOTO N10)
N1180 ;
(GOTO N1000)
;
; ROUTINE FOR AXIS
;
N1200 ; ROUTINE FOR AXIS
N1210 (KEY = 0)
(SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="")
(SYMBOL 011,200,220)
N1212 (IF P277 NE 1 GOTO N1220)
        (IB1 = INPUT "X coordinate or distance : ",-5.5)
        (P268 = IB1)
N1220 (IF P277 NE 2 GOTO N1230)
        (IB1 = INPUT "Y coordinate or distance : ",-5.5)
        (P268 = IB1)
N1230 (IF P277 NE 3 GOTO N1240)
        (IB1 = INPUT "Z coordinate or distance : ",-5.5)
        (P268 = IB1)
N1240 (IF P277 NE 4 GOTO N1250) 
        (IB1 = INPUT "A coordinate or distance : ",-5.5)
        (P268 = IB1)
N1250 (KEY=0)
      (SYMBOL 012,200,220)
N1260 (IF KEY EQ $FC00 OR KEY EQ $FC02 GOTO N1270)
        (SK1="COORD", SK2="", SK3="DIST", SK4="", SK5="", SK6="", SK7="BACK")
        (IF KEY EQ $FC06 GOTO N1000) ; F7 = BACK
        (GOTO N1260)
N1270 (MSG "READY TO MOVE")
      (SYMBOL 009,200,220)
      (IF KEY NE $FC00 GOTO N1280)
        (IF P277 EQ 1 P268=P268-(TPOSX)+ORGX) 
        (IF P277 EQ 2 P268=P268-(TPOSY)+ORGY) 
        (IF P277 EQ 3 P268=P268-(TPOSZ)+ORGZ) 
        (IF P277 EQ 4 P268=P268-(TPOSA)+ORGA) 
N1280 (IF OPMODC EQ 0 GOTO N1290)  
        (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
        (SYMBOL 6,200,220)
        (IF KEY EQ $FC06 GOTO N1000) ; F7 = BACK
        (GOTO N1250)
N1290 (MSG "MOVING THE AXIS")
      (MSG "MOVE BY ?P268")
      (SYMBOL 007,200,220)
      G91
      N1291 (IF P277 NE 1 GOTO N1292) 
        G01 XP268 F50.0
      N1292 (IF P277 NE 2 GOTO N1294) 
        G01 YP268 F50.0
      N1294 (IF P277 NE 3 GOTO N1296)  
        G01 ZP268 F50.0
      N1296 (IF P277 NE 4 GOTO N1298)
        G01 AP268 F50.0
      N1298 (MSG "")
      G90
      (SYMBOL 009,200,220)
      (GOTO N1000)
;
; MENU #1c - move A axis
; 
N1500 ;
(KEY = 0)
(PAGE 110) ; NEED NEW PAGE
(SK1="CONT", SK2="STOP", SK3="A=0", SK4="DIST", SK5="", SK6="", SK7="BACK")
(WKEY)
(IF KEY NE $FC00 GOTO N1510) ; F1 CONTINUOUS
  (KEY = 0)
  ;G91 
  ;G01 A0.00 F500.0
  ;G90
  (PLCMM 143 = 1)
  (GOTO N1500)
N1510 ;
(IF KEY NE $FC01 GOTO N1520) ; F2  STOP
  (KEY = 0)
  (PLCMM 143 = 0)
  (PLCMM 143 = 0)
  (PLCMM 143 = 0)
  (PLCMM 143 = 0)
  (PLCMM 143 = 0)
  (GOTO N1500)
N1520 ;
(IF KEY NE $FC02 GOTO N1530) ; F3  A=0
  (KEY = 0)
  (IF PLCMM143 EQ 1 GOTO N1530) ; SHOULD OUTPUT A MESSAGE
  G90
  G53
  G01 A0.5 F1000.0
  G01 A0.0 F20.0
  (GOTO N1500)
N1530 ;
(IF KEY NE $FC03 GOTO N1540) ; F4  DIST
  (KEY = 0)
  (P277=4)
  (GOTO N1200)
N1540 ;
(IF KEY NE $FC04 GOTO N1550) ; F5
  (KEY = 0)
  (GOTO N1500)
N1550 ;
(IF KEY NE $FC05 GOTO N1560) ; F6  
N1560 ;
(IF KEY NE $FC06 GOTO N1570) ; F7 = BACK
  (KEY = 0)
  (IF PLCMM 143 EQ 1 GOTO N1000)
  F100.00
  (GOTO N1000)
N1570 ;
(GOTO N1500)
;
; MENU #1B
; 
N100 ;
(KEY = 0)
(PAGE 101)
(SK1="RESET", SK2="EDIT PARAM", SK3="MOV ROWS", SK4="", SK5="", SK6="", SK7="BACK")
(ODW 5,12,55)  ; ROWS MOVED
(DW5=P276)
(IF P103 LE 0.0 GOTO N101)
  (ODW 1,4,55)  ; DIAM
  (DW1=P103)
  (ODW 3,8,55)  ; INCHES MOVED
  (DW3=P270)
  (SK4="MOVE IN")
  (SK6="RUN")
N101 ;
(IF P105 LE 0.0 GOTO N103)
  (ODW 2,6,55)  ; CAVITY SPACING
  (DW2=P105)
  (ODW 4,10,55)  ; CAVITIES MOVED
  (DW4=P269)
  (SK5="MOVE CAV")
  (SK6="ZERO")
N103 ; NO REFRESH
(P276=(TPOSX-P275)/P126)
(DW5=P276)
(IF P103 LE 0.0 P103= -99.99)
(IF P105 LE 0.0 P105= -99.99)
(IF P103 LE 0.0 GOTO N104)
  (DW1=P103)
  (P104=360.0/(3.14159*P103))
  (P270=(TPOSA-P271)/P104) ; INCHES MOVED
  (DW3 = P270)
N104 ;
(IF P105 LE 0.0 GOTO N106)
  (DW2=P105)
  (P104=360.0/(3.14159*P103))
  (P269=(TPOSA-P271)/P104/P105) ; CAVITIES MOVED
  (DW4 = P269)
N106 ;
;(WKEY)
(IF KEY NE $FC00 GOTO N120) ; F1  RESET
  (KEY = 0)
  (P103 = -99.99)
  (P104 = -99.99)
  (P105 = -99.99)
  (P271 = TPOSA)
  (P275 = TPOSX)
  (GOTO N100)
N120 ;
(IF KEY NE $FC01 GOTO N130) ; F2  EDIT PARAMS
  (KEY = 0)
  (IB1 = INPUT "Diameter (in inches): ",5.5)
  (P103 = IB1)
  (P104=360.0/(3.14159*P103))
  (IB2 = INPUT "Cavity spacing (in inches): ",5.5)
  (P105 = IB2)
  (GOTO N100)
N130 ;
(IF KEY NE $FC02 GOTO N140) ; F3  MOVE ROWS
  (KEY = 0)
  (IB1 = INPUT "HOW MANY ROWS TO MOVE : ", -5.5)
  (P268 = IB1 * P126) ; calculate number of inches
  G91
  G01 XP268 F80.0
  G90
  (GOTO N100)
N140 ;
(IF KEY NE $FC03 GOTO N150) ; F4  MOVE IN INCHES
  (KEY = 0)
  (IB3 = INPUT "HOW MANY INCHES TO MOVE : ", -5.5)
  G29Y
  G72 Y1.00
  G72 A1.00
  (P104=360.0/(3.14159*P103)) ; SCALING FACTOR
  G72 AP104
  G28YA
  G91
  G01 YIB3 F40.00
  G90
  G29Y
  G72 A1.0
  G72 Y1.00
  (P104=360.0/(3.14159*P103))
N150 ;
(IF KEY NE $FC04 GOTO N160) ; F5  MOVE IN CAVITIES
  (KEY = 0)
  (IB3 = INPUT "HOW MANY CAVITIES TO MOVE : ", -5.5)
  G29Y
  G72 Y1.00
  G72 A1.00
  (P104=360.0/(3.14159*P103)*P105) ; SCALING FACTOR IN CAVITIES
  G72 AP104
  G28YA
  G91
  G01 YIB3 F40.0
  G90
  G29Y
  G72 A1.00
  G72 Y1.00
  (P104=360.0/(3.14159*P103))
N160 ;
(IF KEY NE $FC05 GOTO N170) ; F6  RESET ZERO
  (KEY = 0)
  G29Y
  G72 A1.00
  G72 Y1.00
  (P271 = TPOSA)
  (P275 = TPOSX)
N170 ;
(IF KEY NE $FC06 GOTO N180)  ; F7 = BACK
  (KEY = 0)
  (GOTO N1000)
N180 ;
(GOTO N103)
;
;
; MENU #2
; 
N200 ;
(KEY = 0)
(PAGE 102)
(ODW 1,4,45)  ; X1
(ODW 2,6,45)  ; X2
(ODW 3,8,45)  ; A1
(ODW 4,10,45) ; A2
(ODW 5,5,62)  ; CENT X
(ODW 6,9,62)  ; CENT A/Y
;(ODW 7,14,45) ; MODE OF HANDWHEEL
(ODW 8,20,1)  ; X coord
(ODW 9,20,22) ; Y coord
(ODW 10,20,43) ; Z coord
(ODW 11,20,64) ; A coord
;
(SK1="RESET", SK2="SET PT X", SK3="", SK4="SET PT A/Y", SK5="", SK6="", SK7="BACK")
(IF P287 EQ 0.0 GOTO N280)
  (SK4="SET PT Y")
  (GOTO N281)
N280 (SK4="SET PT A")
N281 ;
;(IF P260 NE 0.0 GOTO N217) 
(IF P262 EQ -99.99 GOTO N217)
  (SK2="", SK3="CENT X")  ; SEE IF THIS WORKS ONLY DOING SK2, SK3
;N217 (IF P260 LE 1.0 GOTO N218)
N217 (IF P264 EQ -99.99 GOTO N218)
  (SK4="", SK5="CENT A")
N218 (IF P262 EQ -99.99 OR P264 EQ -99.99 GOTO N219)
  (SK2="", SK3="CENT X", SK4="", SK5="CENT A", SK6="STORE")
  (IF P287 EQ 0.0 GOTO N219)
  (SK5="CENT Y")
N219 ;
;
N205 ; NO REFRESH OF FULL WINDOW
(DW8=TPOSX)
(DW9=TPOSY)
(DW10=TPOSZ)
(DW11=TPOSA)
(IF OPMODC NE 0 GOTO N1010)
  (SYMBOL 5,350, 210)
N1010 (IF OPMODC NE 1 GOTO N1020)
  (SYMBOL 1,350, 210)
N1020 (IF OPMODC NE 2 GOTO N1030)
  (SYMBOL 2,350, 210)
N1030 (IF OPMODC NE 4 GOTO N1040)
  (SYMBOL 3,350, 210)
N1040 (IF OPMODC NE 8 GOTO N1050)
  (SYMBOL 4,350, 210)
N1050 ;
;(IF OPMODC NE 1 AND OPMODC NE 2 AND OPMODC NE 3 AND OPMODC NE 4 SYMBOL 5,300,270)
(IF P261 EQ -99.99 GOTO N211) 
  (DW1=P261)
N211 (IF P262 EQ -99.99 GOTO N212)
  (DW2=P262)
N212 (IF P263 EQ -99.99 GOTO N213)
  (DW3=P263)
N213 (IF P264 EQ -99.99 GOTO N214)
  (DW4=P264)
N214 (IF P265 EQ -99.99 GOTO N215)
  (DW5=P265)
N215 (IF P266 EQ -99.99 GOTO N216)
  (DW6=P266)
N216 ; 
;
;(IB1 = INPUT "Entry:", 1.0)
;(DW6 = IB1)
;(SK1="RESET", SK2="SET PT", SK3="CENT X", SK4="", SK5="", SK6="STORE", SK7="BACK")
;
;
;(WKEY)
(IF KEY NE $FC00 GOTO N220) ; F1 = RESET ALL PARAMS
  (KEY = 0)
  (P260=0.0) ; STATE
  (P261=-99.99) ; X1
  (P262=-99.99) ; X2
  (P263=-99.99) ; A1
  (P264=-99.99) ; A2
  (P265=-99.99) ; CENTX
  (P266=-99.99) ; CENTA/Y
  (P287=0.0)    ; USING A DIE ROLL
  ; NEED TO FIND OUT IF USING PLATES OR DIE ROLL
  (IB1 = INPUT "ENTER 1 IF USING PLATES (Y AXIS) : ",1.0)
  (P287 = IB1)
  (MSG "TOUCH X1 POINT")
  (GOTO N200)
N220 ;
(IF KEY NE $FC01 GOTO N230) ; F2 = SET PT X
    (KEY = 0)
    ; CHECK THE STATE
    (IF P261 NE -99.99 GOTO N222)
      (MSG "TOUCH X2 POINT")
      ;G53
      (P261=TPOSX)
      (P260 = P260 + 1)
      (GOTO N225)
N222 (IF P262 NE -99.99 GOTO N224)  
      (MSG "X CENT IS FOUND")
      ;G53
      (P262=TPOSX)
      (P260 = P260 + 1)
      (P265 = P262 + (P261-P262)/2.0)
      (IF P262 LE P261 GOTO N229)
        (P265 = P261 + (P262-P261)/2.0)
        (GOTO N225)
N224 ; SHOULD BE A WARNING MESSAGE
      (MSG "X POINTS ALREADY SET, USE RESET")
N225 ; END OF X SETPOINT
      (GOTO N200)
N227 ; ALL SET POINTS SET, YET PRESSED F1
N229 (GOTO N200)
N230 ;
(IF KEY NE $FC02 GOTO N240) ; F3 = CENT X
  (KEY = 0)
  (IF P260 LT 2 GOTO N240)
    N231 (IF OPMODC EQ 0 GOTO N232)  
       (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
       (SYMBOL 6,200,220)
       (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
       (GOTO N231)
    (KEY = 0)    
    N232 (MSG "MOVING TO CENTER X")
    (SYMBOL 7,200,220)
    G53
    G01 XP265 F10.00
    (MSG "")
    (GOTO N200)
N240 ;
(IF KEY NE $FC03 GOTO N245) ; F4 = SET PT A/Y
     (KEY = 0)
     ; A/Y SETPOINT
N242 (IF P263 NE -99.99 GOTO N243)
      (IF P287 EQ 0.0 GOTO N282)
        (MSG "TOUCH Y2 POINT")
        (P263=TPOSY)
        (P260 = P260 + 1)
        (GOTO N200)
      N282 (MSG "TOUCH A2 POINT")
        ;G53
        (P263=TPOSA)
        (P260 = P260 + 1)
        (GOTO N200)
N243 (IF P264 NE -99.99 GOTO N244)
      (IF P287 EQ 0.0 GOTO N284)
        (P264=TPOSY)
        (GOTO N286)
      N284 (MSG "")
        ;G53
        (P264=TPOSA)
      N286 (P260 = P260 + 1)
      (P266 = P264 + (P263-P264)/2.0)
      (IF P264 LE P263 GOTO N229)
        (P266 = P263 + (P264-P263)/2.0)
        (GOTO N200)
N244 ; SHOULD NOT HAVE PRESSED SET PT A
      (MSG "A/Y POINTS ALREADY SET, USE RESET")
      (GOTO N200)
N245 ;
(IF KEY NE $FC04 GOTO N260) ; F5 = CENT A/Y 
  (KEY = 0)
  ; ** OLD **  (IF P260 LT 3 GOTO N250)
  (IF P264 EQ -99.99 GOTO N250)
    N246 (IF OPMODC EQ 0 GOTO N247)  
       (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
       (SYMBOL 6,200,220)
       (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
       (GOTO N246)
    (KEY = 0)    
    N247 (IF P287 EQ 0.0 GOTO N288)
      (MSG "MOVING TO CENTER Y")
      G53
      G01 YP266 F80.00
      G01 YP266 F2.00
      (MSG "")
      (GOTO N289)
    N288 (MSG "MOVING TO CENTER A")
      (SYMBOL 7,200,220)
      G53
      G72 A1.0
      G01 AP266 F300.00
      G01 AP266 F20.00
      (MSG "")
    N289 ;
    (GOTO N200)
N250 ;
(IF KEY NE $FC05 GOTO N260) ; F6 = STORE
  (KEY = 0)
  (IF P260 LT 3 GOTO N260)
    (MSG "STORING TO G56")
    G53
    (ORGX 56=P265)
    (IF P287 EQ 0.0 GOTO N252)
      (ORGY 56=P266)
      (GOTO N254)
    N252 (ORGA 56=P266)
    N254 (MSG "")
    (GOTO N200)
N260 ;
(IF KEY NE $FC06 GOTO N270)  ; F7 = BACK
  (KEY = 0)
  (GOTO N10)
N270 ;
  (GOTO N205)
;
;
;  MENU FIND EDGE
;
;
N3000 ;
(PAGE 100)    ; MAIN MENU
(SK1 ="LEFT EDGE", SK2="RIGHT EDGE", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
(KEY=0)
(WKEY)
(IF KEY NE $FC00 GOTO N3020) ; F1  LEFT EDGE
  (GOTO N5000)
N3020 ;
(IF KEY NE $FC01 GOTO N3030) ; F2  RIGHT EDGE
  (GOTO N6000)
N3030 ;
(IF KEY NE $FC02 GOTO N3040) ; F3
N3040 ;
(IF KEY NE $FC03 GOTO N3050) ; F4
N3050 ;
(IF KEY NE $FC04 GOTO N3060) ; F5
N3060 ;
N3070 ;
(IF KEY NE $FC06 GOTO N3080) ; F7  EXIT
  (GOTO N10)
N3080 ;
(GOTO N3000)
;
;
; MENU #3A - FIND LEFT EDGE
; 
N5000 ;
(KEY = 0)
(PAGE 109)
(ODW 1,4,30)  ; TOOL DIAM
(ODW 6,6,30)  ; TOOL SHIM
(ODW 5,8,30)  ; EDGE TOOL Z AXIS OFFSET
(ODW 2,10,30) ; TOOL X POINT
(ODW 3,12,30) ; EDGE X POINT
(ODW 4,14,30) ; DIST TO EDGE
;
(ODW 8,20,14)  ; X coord
(ODW 9,20,31)  ; Y coord
(ODW 10,20,48) ; Z coord
(ODW 11,20,65) ; A coord
;
(SK1="RESET", SK2="EDIT TOOL", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
(IF P279 GT 0 SK4="SET PT")
(IF P279 LT 0.0 OR P280 LT 0.0 OR P281 LT 0.0 GOTO N5010) 
  (SK1="RESET", SK2="EDIT TOOL", SK3="", SK4="SET PT", SK5="GOTO EDGE", SK6="MOVE", SK7="BACK")
N5010;
;
N5015 ; NO REFRESH OF FULL WINDOW
(DW8=TPOSX)
(DW9=TPOSY)
(DW10=TPOSZ)
(DW11=TPOSA)
(IF OPMODC NE 0 GOTO N5022)
  (SYMBOL 5,350, 210)
N5022 (IF OPMODC NE 1 GOTO N5024)
  (SYMBOL 1,350, 210)
N5024 (IF OPMODC NE 2 GOTO N5026)
  (SYMBOL 2,350, 210)
N5026 (IF OPMODC NE 4 GOTO N5028)
  (SYMBOL 3,350, 210)
N5028 (IF OPMODC NE 8 GOTO N5030)
  (SYMBOL 4,350, 210)
N5030 ;
;(IF OPMODC NE 1 AND OPMODC NE 2 AND OPMODC NE 3 AND OPMODC NE 4 SYMBOL 5,300,270)
(IF P279 LE 0.0 OR P280 LE 0.0 OR P281 LE 0.0 GOTO N5035) 
  (P268 = P282 - (TPOSX))
  (P268 = (ROUND (P268 * 10000.0))/10000.0)
  (DW4 = P268) ; DIST TO EDGE
N5035 ;
(IF P279 GE 0.0 DW1=P279)
(IF P280 GE 0.0 DW2=P280)
(IF P281 GE 0.0 DW5=P281)
(IF P282 GE 0.0 DW3=P282)
(IF P283 GE 0.0 DW6=P283)
;
;(IF P279 EQ -99.99 DW1=0.00) 
(IF P279 GT 0.0 DW1=P279) 
N5040 (IF P280 EQ -99.99 GOTO N5045)
  (DW2=P280)
N5045 ;
;
;(WKEY)
(IF KEY NE $FC00 GOTO N5200) ; F1 = RESET ALL PARAMS
  (KEY = 0)
  (P279=-99.99) ; TOOL DIAM
  (P283=-99.99) ; SHIM THICKNESS
  (P280=-99.99) ; X COORD IN EDGE FIND
  (P282=-99.99) ; EDGE X COORD
  (GOTO N5000)
N5200 ;
(IF KEY NE $FC01 GOTO N5300) ; F2 = EDIT TOOL
  (KEY = 0)
  (MSG "ENTER THE TOOL DIAMETER IN DECIMAL")
  (IB1 = INPUT "Tool diameter (in inches): ",5.5)
  (P279 = IB1)
  (MSG "SHIM THICKNESS USED BETWEEN TOOL AND SIDE")
  (IB1 = INPUT "Shim between tool and side (in inches): ",5.5)
  (P283 = IB1)
  (MSG "HOW HIGH THE TOOL WILL LIFT UP WHEN MOVING")
  (IB1 = INPUT "Tool length or Z offset (in inches): ",5.5)
  (P281 = IB1)
  (MSG "")
  (GOTO N5000)
N5300 ;
(IF KEY NE $FC02 GOTO N5400) ; F3 =
  (KEY = 0)
  (MSG "")
  (GOTO N5000)
N5400 ;
(IF KEY NE $FC03 GOTO N5500) ; F4 = SET POINT
  (KEY = 0)
  (IF P279 LT 0.00 OR P283 LT 0.00 OR P281 LT 0.00)
  (P280 = TPOSX)
  ; ASSUME LEFT EDGE RIGHT NOW
  (P282 = P280 + P283 + (P279/2.0))
  (GOTO N5000)
N5500 ;
(IF KEY NE $FC04 GOTO N5600) ; F5 = GOTO EDGE
  (KEY = 0)
  (IF P282 LE 0.0 GOTO N5000)
  N5510 (IF OPMODC EQ 0 GOTO N5515)  
     (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
     (SYMBOL 6,200,220)
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N5510)
  N5515 (MSG "LIFT TOOL IN Z DIRECTION")
  (SYMBOL 7,200,220)
  (P268=P279+0.050)
  (P268=-1.0*P268)
  G53
  G91
  G01 XP268 F40.00 
  G01 ZP281 F80.00
  (DW8=TPOSX)
  (DW9=TPOSY)
  (DW10=TPOSZ)
  (DW11=TPOSA)
  (SYMBOL 010,200,220)
  (KEY=0)
  N5520 (IF KEY EQ $FC00 GOTO N5525)  
     (SK1="CONTINUE", SK2="", SK3="CANCEL", SK4="", SK5="", SK6="", SK7="BACK")
     (IF KEY EQ $FC02 GOTO N5000) ; F3 = CANCEL
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N5520)
  N5525 (MSG "READY TO MOVE IN X DIRECTION")
  (SYMBOL 7,200,220)
  G53
  G90
  G01 XP282 F10.00
  (MSG "")
  (GOTO N5000)
  (KEY = 0)
N5600 ;
(IF KEY NE $FC05 GOTO N5700) ; F6 = MOVE BY KEYING IN DATA
  (KEY = 0)
  (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="")
  (SYMBOL 011,200,220)
  (IB1 = INPUT "X coordinate or distance : ",-5.5)
  (P268 = IB1)
  (KEY=0)
  (SYMBOL 012,200,220)
  N5620 (IF KEY EQ $FC00 OR KEY EQ $FC02 GOTO N5625)
     (SK1="COORD", SK2="", SK3="DIST", SK4="", SK5="", SK6="", SK7="BACK")
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N5620)
  N5625 (MSG "READY TO MOVE")
  (SYMBOL 009,200,220)
  (IF KEY EQ $FC00 P268=P268-(TPOSX)+ORGX)
  (IF KEY EQ $FC02 P268=IB1) 
  N5610 (IF OPMODC EQ 0 GOTO N5615)  
     (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
     (SYMBOL 6,200,220)
     (IF KEY EQ $FC06 GOTO N3000) ; F7 = BACK
     (GOTO N5610)
  N5615 (MSG "MOVING THE AXIS")
  (SYMBOL 007,200,220)
  G91
  G01 XP268 F50.0
  G90    
  (MSG "")
  (SYMBOL 009,200,220)
  (GOTO N5000)
N5700 ;
(IF KEY NE $FC06 GOTO N5800) ; F7 = BACK
  (KEY=0)
  (GOTO N3000)
N5800 ;
  (GOTO N5015)
;
;
; MENU #3B - FIND RIGHT EDGE
;
;
N6000 ;
(KEY = 0)
(PAGE 109)
(ODW 1,4,30)  ; TOOL DIAM
(ODW 6,6,30)  ; TOOL SHIM
(ODW 5,8,30)  ; EDGE TOOL Z AXIS OFFSET
(ODW 2,10,30) ; TOOL X POINT
(ODW 3,12,30) ; EDGE X POINT
(ODW 4,14,30) ; DIST TO EDGE
(ODW 7,16, 30); DIST EDGE TO G56 X COORD
;
(ODW 8,20,14)  ; X coord
(ODW 9,20,31)  ; Y coord
(ODW 10,20,48) ; Z coord
(ODW 11,20,65) ; A coord
;
(SK1="RESET", SK2="EDIT TOOL", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
(IF P279 GT 0 SK4="SET PT")
(IF P279 LT 0.0 OR P280 LT 0.0 OR P281 LT 0.0 GOTO N5010) 
  (SK1="RESET", SK2="EDIT TOOL", SK3="", SK4="SET PT", SK5="GOTO EDGE", SK6="MOVE", SK7="BACK")
N6010;
;
N6015 ; NO REFRESH OF FULL WINDOW
(DW8=TPOSX)
(DW9=TPOSY)
(DW10=TPOSZ)
(DW11=TPOSA)
(IF OPMODC NE 0 GOTO N6022)
  (SYMBOL 5,350, 210)
N6022 (IF OPMODC NE 1 GOTO N6024)
  (SYMBOL 1,350, 210)
N6024 (IF OPMODC NE 2 GOTO N6026)
  (SYMBOL 2,350, 210)
N6026 (IF OPMODC NE 4 GOTO N6028)
  (SYMBOL 3,350, 210)
N6028 (IF OPMODC NE 8 GOTO N6030)
  (SYMBOL 4,350, 210)
N6030 ;
;(IF OPMODC NE 1 AND OPMODC NE 2 AND OPMODC NE 3 AND OPMODC NE 4 SYMBOL 5,300,270)
(IF P279 LE 0.0 OR P284 LE 0.0 OR P281 LE 0.0 GOTO N6035) 
  (P268 = P285 - (TPOSX))
  (P268 = (ROUND (P268 * 10000.0))/10000.0)
  (DW4 = P268)         ; DIST TO EDGE
  (P268 = ORGX 56)     ; X SETPOINT
  (P268 = P285 - P268) ; DIST TO X SETPT
  (DW7 = P268)
N6035 ;
(IF P279 GE 0.0 DW1=P279)
(IF P284 GE 0.0 DW2=P284)
(IF P281 GE 0.0 DW5=P281)
(IF P285 GE 0.0 DW3=P285)
(IF P283 GE 0.0 DW6=P283)
;
;(IF P279 EQ -99.99 DW1=0.00) 
(IF P279 GT 0.0 DW1=P279) 
N6040 (IF P284 EQ -99.99 GOTO N6045)
  (DW2=P284)
N6045 ;
;
;(WKEY)
(IF KEY NE $FC00 GOTO N6200) ; F1 = RESET ALL PARAMS
  (KEY = 0)
  (P279=-99.99) ; TOOL DIAM
  (P283=-99.99) ; SHIM THICKNESS
  (P284=-99.99) ; X COORD IN EDGE FIND        was 280 -> 284
  (P285=-99.99) ; EDGE X COORD                was 282 -> 285
  (GOTO N6000)
N6200 ;
(IF KEY NE $FC01 GOTO N6300) ; F2 = EDIT TOOL
  (KEY = 0)
  (MSG "ENTER THE TOOL DIAMETER IN DECIMAL")
  (IB1 = INPUT "Tool diameter (in inches): ",5.5)
  (P279 = IB1)
  (MSG "SHIM THICKNESS USED BETWEEN TOOL AND SIDE")
  (IB1 = INPUT "Shim between tool and side (in inches): ",5.5)
  (P283 = IB1)
  (MSG "HOW HIGH THE TOOL WILL LIFT UP WHEN MOVING")
  (IB1 = INPUT "Tool length or Z offset (in inches): ",5.5)
  (P281 = IB1)
  (MSG "")
  (GOTO N6000)
N6300 ;
(IF KEY NE $FC02 GOTO N6400) ; F3 =
  (KEY = 0)
  (MSG "")
  (GOTO N6000)
N6400 ;
(IF KEY NE $FC03 GOTO N6500) ; F4 = SET POINT
  (KEY = 0)
  (IF P279 LT 0.00 OR P283 LT 0.00 OR P281 LT 0.00)
  (P284 = TPOSX)
  ; RIGHT EDGE RIGHT NOW
  (P285 = P284 - P283 - (P279/2.0))
  (GOTO N6000)
N6500 ;
(IF KEY NE $FC04 GOTO N6600) ; F5 = GOTO EDGE
  (KEY = 0)
  (IF P285 LE 0.0 GOTO N6000)
  N6510 (IF OPMODC EQ 0 GOTO N6515)  
     (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
     (SYMBOL 6,200,220)
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N6510)
  N6515 (MSG "LIFT TOOL IN Z DIRECTION")
  (SYMBOL 7,200,220)
  (P268=P279+0.050)
  G53
  G91
  G01 XP268 F40.00 
  G01 ZP281 F80.00
  (DW8=TPOSX)
  (DW9=TPOSY)
  (DW10=TPOSZ)
  (DW11=TPOSA)
  (SYMBOL 010,200,220)
  (KEY=0)
  N6520 (IF KEY EQ $FC00 GOTO N6525)  
     (SK1="CONTINUE", SK2="", SK3="CANCEL", SK4="", SK5="", SK6="", SK7="BACK")
     (IF KEY EQ $FC02 GOTO N6000) ; F3 = CANCEL
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N6520)
  N6525 (MSG "READY TO MOVE IN X DIRECTION")
  (SYMBOL 7,200,220)
  G53
  G90
  G01 XP285 F10.00
  (MSG "")
  (GOTO N6000)
  (KEY = 0)
N6600 ;
(IF KEY NE $FC05 GOTO N6700) ; F6 = MOVE BY KEYING IN DATA
  (KEY = 0)
  (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="")
  (SYMBOL 011,200,220)
  (IB1 = INPUT "X coordinate or distance : ",-5.5)
  (P268 = IB1)
  (KEY=0)
  (SYMBOL 012,200,220)
  N6620 (IF KEY EQ $FC00 OR KEY EQ $FC02 GOTO N6625)
     (SK1="COORD", SK2="", SK3="DIST", SK4="", SK5="", SK6="", SK7="BACK")
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N6620)
  N6625 (MSG "READY TO MOVE")
  (SYMBOL 009,200,220)
  (IF KEY EQ $FC00 P268=P268-(TPOSX)+ORGX)
  (IF KEY EQ $FC02 P268=IB1) 
  N6610 (IF OPMODC EQ 0 GOTO N6615)  
     (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
     (SYMBOL 6,200,220)
     (IF KEY EQ $FC06 GOTO N3000) ; F7 = BACK
     (GOTO N6610)
  N6615 (MSG "MOVING THE AXIS")
  (SYMBOL 007,200,220)
  G91
  G01 XP268 F50.0
  G90    
  (MSG "")
  (SYMBOL 009,200,220)
  (GOTO N6000)
N6700 ;
(IF KEY NE $FC06 GOTO N6800) ; F7 = EXIT
  (KEY=0)
  (GOTO N3000)
N6800 ;
  (GOTO N6015)
;
; MENU #4 = INSPECTIONS
; 
N300 ;
(KEY = 0)
(PAGE 103)
(SK1="RESET", SK2="EDIT PARM", SK3="GAGE HT", SK4="NUM ROWS", SK5="", SK6="", SK7="BACK")
(P115=60.0)
(P117=30.0)
(P120=80.0)
(IF (P103 LE 0.0) OR (P105 LE 0.0) GOTO N303)
  (ODW 1,4,62)  ; DIAM
  (DW1=P103)
  (ODW 2,6,62)  ; CAVITY SPACING
  (DW2=P105)
  (ODW 3,8,62)  ; CAVITIES AROUND
  (DW3=P116)
  (ODW 4,10,62)  ; NUM ROWS
  (DW4=P125)
  (ODW 5,12,62)  ; ROW SPACING
  (DW5=P126)
  (ODW 6,14,62)  ; GAUGE HT IN CAVITY
  (DW6=P272)
  (ODW 7,16,62)  ; GAUGE HT ON SIDE
  (DW7=P273)
  (ODW 8,18,62)  ; GAUGE LIFT HEIGHT
  (DW8=P274)
  (SK6="MEASURE")
N301 ; ALL DATA NOT INPUT
N303 ; NO REFRESH
(IF P103 LE 0.0 P103= -99.99)
(IF P105 LE 0.0 P105= -99.99)
N306 ;
;(WKEY)
(IF KEY NE $FC00 GOTO N320) ; F1  RESET
  (KEY = 0)
  (P103 = -99.99)
  (P104 = -99.99)
  (P105 = -99.99)
  (P271 = TPOSA)
  (GOTO N300)
N320 ;
(IF KEY NE $FC01 GOTO N330) ; F2  EDIT ALL THE PARAMETERS
  (KEY = 0)
  (IB1 = INPUT "Diameter (in inches): ",5.5)
  (P103 = IB1)
  (P104=360.0/(3.14159*P103))
  (DW1=P103)
  (IB2 = INPUT "Cavity Spacing around (in inches): ",5.5)
  (P105 = IB2)
  (DW2=P103)
  (IB3 = INPUT "Number of cavities around : ",5.5)
  (P116 = IB3)
  (DW3=P116)
  (IB4 = INPUT "Number of rows across : ",5.5)
  (P125 = IB4)
  (DW4=P125)
  (IB5 = INPUT "Row spacing in X direction (in inches) : ",5.5)
  (P126 = IB5)
  (DW5=P126)
  (GOTO N300)
N330 ;
(IF KEY NE $FC02 GOTO N340) ; F3  GAUGE HEIGHT
  (KEY = 0)
  (IB2 = INPUT "Gauge height Offset (in cavity): ",5.5)
  (P272 = IB2)
  (DW6=P272)
  (IB2 = INPUT "Gauge height Offset (outside cavity): ",5.5)
  (P273 = IB2)
  (DW7=P273)
  (IB2 = INPUT "Gauge height while re-positioning : ",5.5)
  (P274 = IB2)
  (DW8=P274)
  (GOTO N300)
N340 ;
(IF KEY NE $FC03 GOTO N350) ; F4  NUMBER OF ROWS EDIT ONLY
  (KEY = 0)
  (IB1 = INPUT "Number of rows across : ",5.5)
  (P125 = IB1)
  (DW4=P125)
  (GOTO N300)
N350 ;
(IF KEY NE $FC04 GOTO N360) ; F5
  (KEY = 0)
N360 ;
(IF KEY NE $FC05 GOTO N370) ; F6 = START THE MEASUREMENT
  (KEY = 0)
  ; START THE MEASUREMENT
  ;
  ; CLEARS OUT THE G54 COORD SYSTEM
  (ORGX 54=0.00)
  (ORGY 54=0.00)
  (ORGZ 54=0.00)
  (ORGA 54=0.00)
  ;
  ; Y ACTUAL POSITION
  ; USED FOR SIMULATION ONLY
  (P106=0)
  ; READ IN THE CURRENT COORD
  ;(P111=TPOSX)
  (P111=TPOSX)
  (ORGX 54=P111)
  ;(P112=TPOSY)
  (P112=TPOSY)
  (ORGY 54=P112)
  ;(P113=TPOSZ)
  (P113=TPOSZ)
  (ORGZ 54=P113-4.00)
  ;(P114=PLCR158/10000.0)
  ;(P114=TPOSA);  LAST ONE USED
  (P114=TPOSA)
  (ORGA 54=P114)
  G53
  G54
  G90 G94 G17
  G70
  G01 Z4.00
  ;
  G29A
  ; BLOCK TO SET FEED RATE
  G91 X0.0 FP115
  G91 Y0.0 FP115
  G91 Z0.0 FP115
  G91 A0.0 FP115
  G90
  G1 X0.0 Y0.0 A0.0
  ;
  G1 Y0.0 F100.0
  G1 X0.0 FP115
  ; TURN ON Y/A INTERCHANGE FIRST TIME
  ; ONLY IF NOT DOING POCKETS
  (IF P145 EQ 1 GOTO N1300) ; DOING POCKETS DONT INTERCHANGE Y/A
  ; WAS (CALL 21)
  ; LSUBROUTINE TO INTERCHANGE Y/A
  ; CALL THIS LSUBROUTINE BETWEEN TO SWITCH Y AND A
  ; THE NEXT LINE USES PLCMM144 TO SEE IF IT IS IN
  ; SIMULATION MODE OR NOT
  (P104=360.0/(3.14159*P103))  
  (IF PLCMM144 EQ 1 GOTO N1338)
    ; NO SIMULATION SO TURN ON Y/A INTERCHANGE
    ; G29 IS TURN OFF Y/A
    G29A
    ; SCALE A AXIS
    G72 A1.00
    G01 A0.0 F1000.00
    ;
    G72 AP104
    G28YA
    ; G51 IS LOOK AHEAD ON
    ; FOR NOW REQUIRED BY FAGOR ?
    ; G51 E0.01
    ;
  N1310 ;
  G01 Z+1.00 FP120
  G01 X0.0 FP115
  G01 Y0.0
  G01 X0.0Y0.0
  ;
  ; OUTER LOOP IS HOW MANY ROWS TO DO
  ;
  N1338 ; START OF PARAMETERS
  (P128=0)  ; IF P128=-1 THEN MEANS SHIFT Y ORIG
  (P129=0)  ; STARTING Y POS
  (P130=P111)   ; CURR X POS FOR USE WITH SIMULATION MODE
  (P133=1)      ; CURRENT ROW NUMBER
  (P134=P125)   ; NUM OF ROWS STORAGE
  (P135=(P116-P123+1)*P134) ; TOT CAVITIES TO DO
  (P136=0)      ; TOT CAVITIES DONE
  (P137=0)      ; PERCENTAGE DONE
  (P138=0)      ; CYCLE TIMER
  (P139=0)      ; MIN LEFT 
  (P140=0)      ; MIN LEFT ROUNDED
  (P141=0)      ; HR LEFT ROUNDED
  (P142=0)      ; FIRST CAVITY TIME
  (P143=0)      ; AVG SECONDS PER CAVITY
  ; CHECK IF NUM ROW = 0
  N1400 (IF (P125 EQ 0) GOTO N1420)
  ; THE NUMBER OF ROWS IS GREAT THAN 0
  ; DO A ROW
  (IF (P116 LT 1) GOTO N1405)
    ; SO DOING 2 OR MORE CAVITIES HAVE TO LOOP
    (P106=P129)  ;  RESET CURR Y POS NEW ROW
    (P118=P116-1)  ; DO AT LEAST ONE
    (P124=1) ; CURRENT CAVITY
    (P142=CYTIME)
    N1300 ; BEGINNING OF GENERAL LOOP
      (P137=0) ; DEFAULT PERCENTAGE
      (IF (P136 EQ 0) GOTO N305) ; IF P136=0 WILL BLOW UP 
      (P137=(FIX(P136/P135*10000.0))/100.0)
      (P138=CYTIME)
      (P138=P138-P142)             ; LSUBTRACTS OUT SPINDLE WARMUP
      (P143=P138/100/P136)         ; AVG TIME PER CAVITY IN SEC
      (P139=((P135-P136)*P143)/60.0) 
      (P143=FIX (P143))
      (P141=FIX(P139/60.0))        ; HRS LEFT
      (P140=FIX(P139-(P141*60.0))) ; MIN LEFT
      N305 (MSG "R=?P133/?P134 C=?P124/?P116 ?P136/?P135 ?P141:?P140 (?P143)")    
      G1 X0.0 FP115
      (IF (P124 LT P123) GOTO N1320 )
        ; RUN THE CAVITY MEASUREMENT
        ; WAS CALL 100
        G01 X0.0 Y0.0 FP120
        G91
        G01 X0.0Y0.0 FP120
        G90
        G01 ZP272 FP117  ; SHOULD BE GAUGE INSIDE THE CAVITY
        G01 ZP274 FP120
        G01 X0.0 Y0.0 FP115
      N1320 ; 
      (P124 = P124 + 1)  ; INCR THE CURR CAVITY #
      (P136 = P136 + 1)  ; INCR # OF CAVITIES
      (P106 = P106 + P105)
      ;(P129 = P105)
      ; WAS CALL 23  ; HAVE TO INCR THRU CAVITIES EVEN IF NOT CUTTING
      ; WAS CALL 22
      ; LSUBROUTINE TO INCREMENT BETWEEN CAVITIES
      ; CALL THIS IN BETWEEN CAVITIES
      ; IF THE SIMULATION IS ON THE INCREMENT THE Y AXIS
      ; NEXT LINE CHECK IF SIMULATION IS ON
      G1 X0.0 FP115
      (IF PLCMM145 EQ 0 GOTO N1545)
        ; PAUSE BETWEEN CAVITIES IS ON
        ; WAS CALL 16
        ; PAUSE BETWEEN CAVITIES OR ROW
        ; BRING THE TOOL UP TO Z=4.00
        ; THEN STOP
        G90
        (PLCMM149 = 1) ; TELL PLC THAT MACHINE IS PAUSED
        M4
        G01 Z4.00 F30.0
        ; CAN'T USE G52
        G29A
        G72A1.00
        G53
        G01 ZP113 F50.00
        M0
        ; ON STARTUP REDO THE z AXIS
        (ORGZ 54=0.00)
        (P113=TPOSZ)
        (P113=TPOSZ)
        (ORGZ 54=P113-4.00)
        (ORGZ 55=P113-4.00)
        G53
        G54
        G90 G94 G17
        G70
        G01 Z4.00
        ;
        G29A
        ; BLOCK TO SET FEED RATE
        G91 X0.0 FP115
        G91 Y0.0 FP115
        G91 Z0.0 FP115
        G91 A0.0 FP115
        G90
        ; END OF CALL 16
      N1545 ; CAVITY PAUSE IS DONE  
      (IF PLCMM144 EQ 1 GOTO N1550)
        ; SIMULATION IS NOT ON
        ; SO NEED TO MOVE TO THE NEXT INCREMENT
        (IF P145 EQ 0 GOTO N1548) ; NOT DOING POCKETS SKIP
          G1 Y0.0 FP115
          ; WAS CALL 21   ONLY CALL IF DOIN POCKET
          (IF PLCMM144 EQ 1 GOTO N1530)
            ; NO SIMULATION SO TURN ON Y/A INTERCHANGE
            ; G29 IS TURN OFF Y/A
            G29A
            ; SCALE A AXIS
            G72 A1.00
            G01 A0.0 F1000.00
            ;
            G72 AP104
            G28YA
            ; G51 IS LOOK AHEAD ON
            ; FOR NOW REQUIRED BY FAGOR ?
            ; G51 E0.01
            ;
          N1530 ;
          G01 ZP274 FP120
          G01 X0.0 FP115
          G01 Y0.0
          G01 X0.0Y0.0
        N1548 G1 YP105 F100.0
        G1 X0.0 FP115  ; NEED AFTER THE Y MOVE TO RESET THE FEED RATE
        G53
        G29A
        G72 A1.00
        ;(ORGA 54=TPOSA)
        (ORGA 54=TPOSA)
        G54
        (GOTO N1555)
      N1550 ; IT IS BEING SIMULATED
        ; SO USE CUMMALITIVE Y COORD
        G53
        (ORGY 54=P106+P112)
        G54
      N1555 ; END OF LSUB
      (IF P145 EQ 0 GOTO N1557) ; NOT DOING POCKETS INTERCHANGE Y/A
        ; DOING POCKETS
        ; NEED TO DO ANYTHING ELSE
        (GOTO N1558)
      N1557 ; WAS CALL 21
      ; WAS CALL 21   ONLY CALL IF DOIN POCKET
      (IF PLCMM144 EQ 1 GOTO N1531)
        ; NO SIMULATION SO TURN ON Y/A INTERCHANGE
        ; G29 IS TURN OFF Y/A
        G29A
        ; SCALE A AXIS
        G72 A1.00
        G01 A0.0 F1000.00
        ;
        G72 AP104
        G28YA
        ; G51 IS LOOK AHEAD ON
        ; FOR NOW REQUIRED BY FAGOR ?
        ; G51 E0.01
        ;
      N1531 ;
      G01 ZP274 FP120
      G01 X0.0 FP115
      G01 Y0.0
      G01 X0.0Y0.0
      N1558 ; END OF ROUTINE
      ; END OF CALL 23
    N1330 ; END OF LOOP
    (RPT N1300, N1330) NP118
  N1405 ; NO MORE CAVITIES IN ROW
  ; ROW IS FINISHED CHECK IF SHOULD PAUSE
  (IF PLCMM146 EQ 0 GOTO N1408)
    ; PAUSE BETWEEN ROWS IS ON
    ; WAS CALL 16
    ; PAUSE BETWEEN CAVITIES OR ROW
    ; BRING THE TOOL UP TO Z=4.00
    ; THEN STOP
    G90
    (PLCMM149 = 1) ; TELL PLC THAT MACHINE IS PAUSED
    M4
    G01 Z4.00 F30.0
    ; CAN'T USE G52
    G29A
    G72A1.00
    G53
    G01 ZP113 F50.00
    M0
    ; ON STARTUP REDO THE z AXIS
    (ORGZ 54=0.00)
    (P113=TPOSZ)
    (P113=TPOSZ)
    (ORGZ 54=P113-4.00)
    (ORGZ 55=P113-4.00)
    G53
    G54
    G90 G94 G17
    G70
    G01 Z4.00
    ; DON'T NEED TO STARTUP SPINDLES (CALL 15) ; SPINDLE STARTUP
    ;
    G29A
    ; BLOCK TO SET FEED RATE
    G91 X0.0 FP115
    G91 Y0.0 FP115
    G91 Z0.0 FP115
    G91 A0.0 FP115
    G90
  N1408 ; CAVITY PAUSE IS DONE  
  ; LSUB 1 FROM NUM ROW
  ; WHEN NUM ROWS = 0 THEN ITS TIME TO END
  (P125 = P125 - 1)
  (P133 = P133 + 1)
  ; CHECK IF NUM ROW = 0
  (IF (P125 LE 0) GOTO N1420)
  ; CURR ROW IS GREATER 0, SO HAVE TO DO ANOTHER ROW
  ; INCREMENT FOR ONE ROW
  ; -- X = X + Xincr
  G54
  G01 XP126 FP115             ; MOVE TO NEW X POS
  (P130 = P130 + P126)        ; INC X POS FOR SIMULATOR
  (P131 = TPOSX)   ; CURRENT X POSITION
  (P131 = TPOSX)              ; CURRENT X POSITION
  (P132 = 0 )                 ; USE THIS VARIABLE TO SET THE G54
  (IF (PLCMM144 EQ 1) P132=P130 ELSE P132=P131)
  (ORGX 54=P132)  ; RESET X TO ZERO
  ; TOGGLE G54 TO ACTIVATE
  G53 
  G54
  G01 X0.0 FP115
  ; IF P128 WAS 0, THEN IT MEANS NEXT ROW NEEDS AN OFFSET ON THE Y 
  (IF (P128 LT 0) P128=0.00 ELSE P128=-1.00)
  ; NOW DO THE Y POS FOR THE NEXT ROW
  (P129 = 0.00 - P127 * P128)
    ; WAS CALL 24
    ; LSUBROUTINE TO GO BACK TO ORIGIN BETWEEN ROWS
    ; CALL THIS LSUBROUTINE ROWS
    ; THE NEXT LINE USES PLCMM144 TO SEE IF IT IS IN
    ; SIMULATION MODE OR NOT
    (IF PLCMM144 EQ 1 GOTO N1580)
      ; NO SIMULATION SO TURN OFF Y/A INTERCHANGE
      G1 Y0.0 F100.0
      G1 X0.0 FP115  ; NEED AFTER THE Y MOVE TO RESET THE FEED RATE
      G53
      G29A
      G72 A1.00
      G1 AP114 F1000.0
      (ORGA 54=TPOSA);
      (ORGA 54=TPOSA);
      G54
      G01 A0.0 F1000.00
      G72 AP104
      G28YA
      ; G51 E0.01  ;left over from old routines
      ; IT IS AT A=0.0 Y=0.0
      ; NOW MOVE TO NEXT Y POS
      N1578 ; DOING POCKETS 
      G1 YP129 F100.00    
      G1 X0.0 FP115  ; NEED AFTER THE Y MOVE TO RESET THE FEED RATE
      G53
      G29A
      G72 A1.00
      (ORGA 54=TPOSA)
      (ORGA 54=TPOSA)
      G54
      G29A
      ; SCALE A AXIS
      G72 A1.00
      G01 A0.0 F1000.00
      ;
      G72 AP104
      (IF P145 EQ 1 GOTO N1579) ; DOING POCKETS DONT INTERCHANGE Y/A
        G28YA
      N1579 ;
      G01 Y0.0 FP115
      (GOTO N1585)
      N1580 ; SIMULATION MODE
      G53
      (ORGY 54=P129+P112)  ; P129 IS THE Y POS OFFSET
      G54    
      N1585 ; END OF LSUB
  ; LOOP BACK TO DO A ROW
  (GOTO N1400)
  ;
  ;
  N1420 ; END OF CAVITIES
  ;
  G90
  (PLCMM149 = 0)
  M4
  G01 Z4.00 F30.0
  ; CAN'T USE G52
  G29A
  G72A1.00
  G53
  G01 ZP113 F50.00
  ; THESE ARE THE ORIGINAL COORDINATES
  ; WHEN STARTED THE PROGRAM
  G1 XP111 YP112 
  G1 AP114 F1000.0
  G1 XP111 YP112 F40.00 
 ;
N370 ;
(IF KEY NE $FC06 GOTO N380)  ; F7 = BACK
  (KEY = 0)
  (GOTO N10)
N380 ;
(GOTO N303)
;
;
; MENU #5  COORDINATES
; 
N400 ;
(KEY = 0)
(PAGE 108)
;G55  #1
(ODW 1,04,14) ; X coord
(ODW 2,04,31) ; Y coord
(ODW 3,04,48) ; Z coord
(ODW 4,04,65) ; A coord
;G56  #2
(ODW 5,06,14) ; X coord
(ODW 6,06,31) ; Y coord
(ODW 7,06,48) ; Z coord
(ODW 8,06,65) ; A coord
;G159 N10  was G57  #3
(ODW 09,08,14) ; X coord
(ODW 10,08,31) ; Y coord
(ODW 11,08,48) ; Z coord
(ODW 12,08,65) ; A coord
;G159 N11  was G58  #4
(ODW 13,10,14) ; X coord
(ODW 14,10,31) ; Y coord
(ODW 15,10,48) ; Z coord
(ODW 16,10,65) ; A coord
;G159 N12  was G59  #5
;(ODW 17,12,14) ; X coord
;(ODW 18,12,31) ; Y coord
;(ODW 19,12,48) ; Z coord
;(ODW 20,12,65) ; A coord
; CURR POSITION
(ODW 21,20,14)  ; X coord
(ODW 22,20,31)  ; Y coord
(ODW 23,20,48)  ; Z coord
(ODW 24,20,65)  ; A coord
; DIFF TO COORD SYS
(ODW 17,18,14)  ; X coord
(ODW 18,18,31)  ; Y coord
(ODW 19,18,48)  ; Z coord
(ODW 20,18,65)  ; A coord
; SELECTED COORDINATE SYSTEM
(ODW 0,16,14)  ; SELECTED COOORD
;
(SK1="SELECT", SK2="STORE", SK3="MOVE", SK4="", SK5="TURN ON", SK6="MACH COORD", SK7="BACK")
;
N405 ; NO REFRESH OF FULL WINDOW
(DW1=ORGX55)
(DW2=ORGY55)
(DW3=ORGZ55)
(DW4=ORGA55)
;
(DW5=ORGX56)
(DW6=ORGY56)
(DW7=ORGZ56)
(DW8=ORGA56)
;
(DW09=ORGX 10)
(DW10=ORGY 10)
(DW11=ORGZ 10)
(DW12=ORGA 10)
;
(DW13=ORGX 11)
(DW14=ORGY 11)
(DW15=ORGZ 11)
(DW16=ORGA 11)
;
(IF P277 NE 1 GOTO N410)        ; #1
  (SYMBOL 8,78,60)
  (P268=TPOSX-ORGX55)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW17=P268)
  (P268=TPOSY-ORGY55)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW18=P268)
  (P268=TPOSZ-ORGZ55)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW19=P268)
  (P268=TPOSA-ORGA55)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW20=P268)
N410 (IF P277 NE 2 GOTO N412)   ; #2
  (SYMBOL 8,78,92)
  (P268=TPOSX-ORGX56)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW17=P268)
  (P268=TPOSY-ORGY56)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW18=P268)
  (P268=TPOSZ-ORGZ56)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW19=P268)
  (P268=TPOSA-ORGA56)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW20=P268)
N412 (IF P277 NE 3 GOTO N414)   ; #3
  (SYMBOL 8,78,125)
  (P268=TPOSX-ORGX 10)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW17=P268)
  (P268=TPOSY-ORGY 10)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW18=P268)
  (P268=TPOSZ-ORGZ 10)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW19=P268)
  (P268=TPOSA-ORGA 10)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW20=P268)
N414 (IF P277 NE 4 GOTO N415)   ; #4
  (SYMBOL 8,78,159)
  (P268=TPOSX-ORGX 11)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW17=P268)
  (P268=TPOSY-ORGY 11)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW18=P268)
  (P268=TPOSZ-ORGZ 11)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW19=P268)
  (P268=TPOSA-ORGA 11)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW20=P268)
N415 (IF P277 NE 5 GOTO N417)   ; #5
  (SYMBOL 8,78,192)
  (P268=TPOSX-ORGX 12)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW17=P268)
  (P268=TPOSY-ORGY 12)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW18=P268)
  (P268=TPOSZ-ORGZ 12)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW19=P268)
  (P268=TPOSA-ORGA 12)
  (P268=ROUND(P268*10000))
  (P268=P268/10000)
  (DW20=P268)
N417; 
;
(DW21=TPOSX)
(DW22=TPOSY)
(DW23=TPOSZ)
(DW24=TPOSA)
;
(DW0=P277)
(IF OPMODC NE 0 GOTO N420)
  (SYMBOL 5,350, 210)
N420 (IF OPMODC NE 1 GOTO N422)
  (SYMBOL 1,350, 210)
N422 (IF OPMODC NE 2 GOTO N423)
  (SYMBOL 2,350, 210)
N423 (IF OPMODC NE 4 GOTO N424)
  (SYMBOL 3,350, 210)
N424 (IF OPMODC NE 8 GOTO N425)
  (SYMBOL 4,350, 210)
N425 ;
;(IF OPMODC NE 1 AND OPMODC NE 2 AND OPMODC NE 4 AND OPMODC NE 8 SYMBOL 5,300,270)
N430 ; 
;
;(WKEY)
(IF KEY NE $FC00 AND KEY NE $FFB0 AND KEY NE $FFB2 GOTO N4020) ; F1 = SELECT COORD  OR UP/DOWN
  (IF KEY EQ $FC00 P277=P277+1)
  (MSG "#2")
  (IF KEY NE $FFB0 GOTO N432)
    (P277=P277-1)
    (IF P277 LE 0 P277=1)
  N432 (IF KEY NE $FFB2 GOTO N433)
    (P277=P277+1)
    (IF P277 GT 5 P277=5)
  N433 (IF P277 GT 5 P277=1)
  (KEY=0)
  (GOTO N400)
N4020 ;
(IF KEY NE $FC01 GOTO N4130) ; F2 = STORE
    (KEY = 0)
    (MSG "STORE CURRENT POSITION INTO ?P277")
    (SK1="YES Z=+4", SK2="YES Z=0.0", SK3="CANCEL", SK4="", SK5="", SK6="", SK7="BACK")
    N4022 (IF (KEY NE $FC00) AND (KEY NE $FC01) GOTO N4030) ; F1 OR F2
      (IF KEY EQ $FC00 P278=+4.00 ELSE P278=0.00 )    
      (KEY=0)
      (MSG "...  STORING  ...") 
      (IF P277 NE 1 GOTO N4023)
        (P268=TPOSX)
        (ORGX 55=P268)
        (P268=TPOSY)
        (ORGY 55=P268)
        (P268=TPOSZ-P278)
        (ORGZ 55=P268)
        (P268=TPOSA)
        (ORGA 55=P268)
        G53
        G55
      N4023 (IF P277 NE 2 GOTO N4024)
        (P268=TPOSX)
        (ORGX 56=P268)
        (P268=TPOSY)
        (ORGY 56=P268)
        (P268=TPOSZ-P278)
        (ORGZ 56=P268)
        (P268=TPOSA)
        (ORGA 56=P268)
        G53
        G56
      N4024 (IF P277 NE 3 GOTO N4026)   ; #3
        (P268=TPOSX)
        (ORGX 10=P268)
        (P268=TPOSY)
        (ORGY 10=P268)
        (P268=TPOSZ-P278)
        (ORGZ 10=P268)
        (P268=TPOSA)
        (ORGA 10=P268)
        G53
        G57
      N4026 (IF P277 NE 4 GOTO N4028)   ; #4
        (P268=TPOSX)
        (ORGX 11=P268)
        (P268=TPOSY)
        (ORGY 11=P268)
        (P268=TPOSZ-P278)
        (ORGZ 11=P268)
        (P268=TPOSA)
        (ORGA 11=P268)
        G53
        G58
      N4028 (IF P277 NE 5 GOTO N4029)   ; #5
        (P268=TPOSX)
        (ORGX 12=P268)
        (P268=TPOSY)
        (ORGY 12=P268)
        (P268=TPOSZ-P278)
        (ORGZ 12=P268)
        (P268=TPOSA)
        (ORGA 12=P268)
        G53
        G59
      N4029;
      (MSG "DONE") 
      (GOTO N400)
    N4030 (IF KEY NE $FC02 GOTO N4040) ; F3 = NO
      (KEY=0)
      (GOTO N400)
    N4040 (IF KEY NE $FC05 GOTO N4050) ; F6 = BACK
      (KEY=0)
      (GOTO N10)
    N4050 (GOTO N4022)
N4130 ;
(IF KEY NE $FC02 GOTO N4400) ; F3 = MOVE
  (KEY = 0)
  (MSG "MOVE TO ?P277")
  (SK1="YES Z=+4", SK2="YES Z=0.0", SK3="CANCEL", SK4="", SK5="", SK6="", SK7="BACK")
  N4132 (IF (KEY NE $FC00) AND (KEY NE $FC01) GOTO N4134) ; F1 OR F2
    (IF KEY EQ $FC00 P278=+4.0 ELSE P278=0.0)
    (KEY=0)
    (GOTO N4141) 
  N4134 (IF KEY NE $FC02 GOTO N4136) ; F3 = NO
    (KEY=0)
    (GOTO N400)
  N4136 (IF KEY NE $FC05 GOTO N4138) ; F6 = BACK
    (KEY=0)
    (GOTO N10)
  N4138 (GOTO N4132)
  N4141 (IF OPMODC EQ 0 GOTO N4142)  
     (SK1="", SK2="", SK3="", SK4="", SK5="", SK6="", SK7="BACK")
     (SYMBOL 6,200,220)
     (IF KEY EQ $FC06 GOTO N10) ; F7 = BACK
     (GOTO N4141)
  N4142 (KEY = 0)    
  (MSG "MOVING TO COORDINATES")
  (SYMBOL 7,200,220)
  G53
  G72 A1.0
  G72 Y1.0
  G29A
  G90
  G01 Z-0.5563 F70.0
  (KEY=0)
  (IF P277 NE 1 GOTO N4145)
    G55
  N4145 (IF P277 NE 2 GOTO N4147)
    G56
  N4147 (IF P277 NE 3 GOTO N4149)   ; #3
    G159N10
  N4149 (IF P277 NE 4 GOTO N4151)   ; #4
    G159N11
  N4151 (IF P277 NE 5 GOTO N4155)   ; #5
    G159N12
  N4155;
  G01 X0Y0 F50.00
  G01 A0 F1000.00
  G01 A0 F10.0
  G01 X0Y0 F10.0
  G01 ZP278 F50.0
  G01 ZP278 F10.0 
  (MSG "")
  (GOTO N400)
N4400 ;
(IF KEY NE $FC03 GOTO N4500) ; F4 =
N4500 ;
(IF KEY NE $FC04 GOTO N4600) ; F5 = TURN ON 
  (KEY = 0)
  G53
  (IF P277 NE 1 GOTO N4410)
    G55
  N4410 (IF P277 NE 2 GOTO N4412)
    G56
  N4412 (IF P277 NE 3 GOTO N4414)  ; #3
    G159N10
  N4414 (IF P277 NE 4 GOTO N4416)  ; #4
    G159N11
  N4416 (IF P277 NE 5 GOTO N4418)  ; #5
    G159N12
  N4418;
N4600 ;
(IF KEY NE $FC05 GOTO N4700) ; F6 = MACH COORD
  (KEY = 0)
  G53
N4700 ;
(IF KEY NE $FC06 GOTO N4800)  ; F7 = BACK
  (KEY = 0)
  (GOTO N10)
N4800 ;
  (GOTO N405)
;
;
; MENU #6  SPINDLES
; 
N7000 ;
(KEY = 0)
(PAGE 114)
(SK1="", SK2="", SK3="DAILY", SK4="", SK5="FULL", SK6="", SK7="BACK")
(KEY=0)
(WKEY)
(IF KEY NE $FC00 GOTO N7020) ; F1  
N7020 ;
(IF KEY NE $FC01 GOTO N7030) ; F2  
N7030 ;
(IF KEY NE $FC02 GOTO N7040) ; F3  DAILY
  (KEY = 0)
  (SYMBOL 015,100,260)
  (P268=TIME)
  (ODW 1,19,20)  ; START TIME
  (DW1=P268)
  (SK7="")
  ;(EXEC P(009003))
  (CALL 9003)
  (SYSTEM)
N7040 ;
(IF KEY NE $FC03 GOTO N7050) ; F4 
N7050 ;
(IF KEY NE $FC04 GOTO N7060) ; F5  FULL
  (KEY = 0)
  (SYMBOL 016,100,260)
  (P268=TIME)
  (ODW 1,19,20)  ; START TIME
  (DW1=P268)
  (SK7="")
  ;(EXEC P(009002))
  (CALL 9002)
  (SYSTEM)
N7060 ;
(IF KEY NE $FC05 GOTO N7070) ; F6  
N7070 ;
(IF KEY NE $FC06 GOTO N7080) ; F7  GO BACK
  (GOTO N10)
N7080 ;
(GOTO N7000)
%
